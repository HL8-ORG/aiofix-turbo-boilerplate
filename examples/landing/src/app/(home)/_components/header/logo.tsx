'use client';

import { cn } from '@repo/design-system/lib/utils';
import { type SVGMotionProps, motion } from 'motion/react';
// 动画效果
const pathVariants = {
  hidden: {
    pathLength: 0,
    fillOpacity: 0,
  },
  visible: {
    pathLength: 1,
    fillOpacity: 1,
    transition: {
      duration: 2,
      ease: 'easeInOut',
    },
  },
} as const;

const sizes = {
  xs: {
    svg: 'h-4',
    betaTag: 'bottom-[1px] left-[calc(100%+4px)] px-1 py-0.5 text-[8px]',
  },
  sm: {
    svg: 'h-6',
    betaTag: 'bottom-[2px] left-[calc(100%+6px)] px-1.5 py-0.5 text-[9px]',
  },
  lg: {
    svg: 'h-12',
    betaTag: 'bottom-[4px] left-[calc(100%+10px)] px-2 py-0.5 text-base',
  },
  xl: {
    svg: 'h-14',
    betaTag: 'bottom-[7px] left-[calc(100%+15px)] px-2.5 py-1 text-base',
  },
};

export const Logo = ({
  betaTag = false,
  draw = false,
  size = 'sm',
  className,
  containerClassName,
  ...props
}: {
  containerClassName?: string;
  betaTag?: boolean;
  draw?: boolean;
  size?: keyof typeof sizes;
} & SVGMotionProps<SVGSVGElement>) => {
  return (
    <div className={cn('relative', containerClassName)}>
      <motion.svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 73 40"
        className={cn(sizes[size].svg, className)}
        {...props}
      >
        {/* 你可以在这里修改logo https://danmarshall.github.io/google-font-to-svg-path/ */}
        <motion.path
          variants={draw ? pathVariants : {}}
          initial={draw ? 'hidden' : false}
          animate={draw ? 'visible' : false}
          stroke="currentColor"
          strokeWidth={0.5}
          className="fill-blue-600 dark:fill-red-600"
          d="M 6.075 15.21 L 8.775 15.3 L 10.44 15.345 Q 12.6 15.435 13.455 15.435 Q 16.965 15.435 18.81 15.39 Q 21.015 15.39 22.185 15.345 L 22.185 13.995 L 22.14 11.52 Q 22.14 9.81 22.32 4.5 L 22.41 1.35 Q 22.455 0.945 22.905 0.945 L 23.4 0.99 Q 23.58 1.035 24.075 1.035 Q 24.615 1.035 24.84 1.125 Q 25.29 1.26 25.29 1.575 L 25.2 1.935 Q 25.155 2.25 25.065 3.128 Q 24.975 4.005 24.795 5.805 Q 24.66 7.155 24.57 11.948 Q 24.48 16.74 24.48 19.44 Q 24.48 21.33 24.3 26.01 L 24.21 28.98 L 24.165 30.78 Q 24.165 31.455 24.255 32.085 L 24.3 32.355 Q 24.3 32.625 24.098 32.648 Q 23.895 32.67 23.85 32.67 Q 23.4 32.76 22.23 32.76 Q 21.87 32.76 21.87 32.31 L 21.915 25.74 Q 21.87 25.02 21.893 24.233 Q 21.915 23.445 21.915 22.815 L 21.915 20.925 L 21.915 17.595 L 18.27 17.685 Q 16.335 17.73 13.05 17.73 L 8.82 17.73 Q 7.11 17.73 6.165 17.685 Q 6.165 18.45 6.12 18.855 Q 6.03 20.295 6.03 21.6 L 5.985 26.46 Q 5.985 30.015 6.21 31.14 Q 6.3 31.68 6.3 31.815 Q 6.3 32.445 5.962 32.603 Q 5.625 32.76 5.243 32.738 Q 4.86 32.715 4.725 32.715 Q 3.15 32.625 1.125 32.85 Q 0.36 32.94 0.203 32.49 Q 0.045 32.04 0.068 31.23 Q 0.09 30.42 0.09 30.015 L 0 14.445 L 0.09 2.79 Q 0.09 1.89 0.293 1.643 Q 0.495 1.395 0.945 1.395 L 1.935 1.44 Q 2.16 1.44 2.97 1.35 Q 3.195 1.305 3.735 1.305 L 4.905 1.35 Q 5.265 1.395 5.895 1.395 Q 6.39 1.395 6.503 1.688 Q 6.615 1.98 6.593 2.295 Q 6.57 2.61 6.57 2.745 Q 6.57 4.815 6.39 8.1 L 6.21 12.555 L 6.075 15.21 Z M 39.24 3.69 L 39.15 6.12 Q 38.97 9.81 38.97 11.655 L 39.06 18.45 Q 39.105 20.07 39.105 21.78 L 39.015 26.685 L 38.97 27.585 L 39.015 28.845 L 39.105 30.42 L 45.54 30.645 L 50.895 30.69 L 50.985 30.69 Q 51.255 30.69 51.3 30.78 Q 51.345 30.87 51.323 31.028 Q 51.3 31.185 51.3 31.275 Q 51.255 31.455 51.323 31.95 Q 51.39 32.445 51.39 32.85 Q 51.39 33.165 51.165 33.255 Q 50.94 33.345 50.603 33.323 Q 50.265 33.3 50.085 33.3 L 47.7 33.165 Q 44.55 32.895 43.245 32.895 Q 41.805 32.895 35.955 33.165 L 31.86 33.3 Q 30.87 33.3 30.87 32.4 L 30.87 28.89 L 31.05 13.815 Q 31.05 12.105 30.825 7.605 L 30.645 2.07 Q 30.645 1.305 31.23 1.305 Q 31.455 1.305 31.995 1.44 Q 32.535 1.575 32.85 1.575 Q 34.11 1.755 35.865 1.755 Q 37.08 1.755 38.16 1.62 Q 38.835 1.53 39.105 1.71 Q 39.375 1.89 39.375 2.295 Q 39.375 2.61 39.308 2.948 Q 39.24 3.285 39.24 3.69 Z M 67.77 15.3 Q 69.165 16.02 70.38 17.28 Q 72.99 20.07 72.99 23.85 Q 72.99 26.73 71.573 28.845 Q 70.155 30.96 67.725 32.085 Q 65.295 33.21 62.235 33.21 Q 57.285 33.21 54.787 30.983 Q 52.29 28.755 52.29 24.885 Q 52.29 21.06 56.565 17.505 Q 58.455 16.02 60.885 14.94 L 60.435 14.49 Q 60.3 14.265 59.895 13.95 Q 59.49 13.635 59.22 13.365 Q 58.95 13.185 57.937 12.555 Q 56.925 11.925 56.227 10.53 Q 55.53 9.135 55.53 6.93 Q 55.53 4.635 56.812 3.06 Q 58.095 1.485 59.962 0.743 Q 61.83 0 63.675 0 Q 65.16 0 66.96 0.63 Q 68.76 1.26 70.133 2.768 Q 71.505 4.275 71.505 6.795 Q 71.505 10.17 69.615 13.14 Q 68.895 14.4 67.77 15.3 Z M 63.675 31.365 Q 65.565 31.365 67.163 30.173 Q 68.76 28.98 69.683 27.203 Q 70.605 25.425 70.605 23.85 Q 70.605 22.005 69.66 20.588 Q 68.715 19.17 67.275 18.18 Q 65.79 17.1 63.99 16.515 Q 61.425 17.505 59.4 18.81 Q 57.465 19.98 56.16 21.668 Q 54.855 23.355 54.855 25.29 Q 54.855 27.945 56.115 29.273 Q 57.375 30.6 59.22 30.983 Q 61.065 31.365 63.675 31.365 Z M 57.78 6.165 Q 57.78 9.315 60.66 11.925 Q 61.92 13.05 63.63 13.815 Q 64.935 13.23 66.105 12.33 Q 68.58 10.305 68.58 8.1 Q 68.58 5.355 67.208 3.735 Q 65.835 2.115 63.315 2.115 Q 62.235 2.115 60.93 2.655 Q 59.625 3.195 58.702 4.14 Q 57.78 5.085 57.78 6.165 Z"
        />
      </motion.svg>
      {betaTag && (
        <motion.div
          className={cn(
            sizes[size].betaTag,
            'absolute bg-neutral-200 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400 rounded-full'
          )}
          initial={draw ? { opacity: 0 } : undefined}
          animate={draw ? { opacity: 1 } : undefined}
          transition={{ type: 'spring', stiffness: 300, damping: 20 }}
        >
          中国
        </motion.div>
      )}
      <span className="sr-only">HL8</span>
    </div>
  );
};
